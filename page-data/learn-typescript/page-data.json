{"componentChunkName":"component---src-templates-blog-post-js","path":"/learn-typescript/","result":{"data":{"site":{"siteMetadata":{"title":"bwake blog"}},"markdownRemark":{"id":"22c6a742-5f1a-5c11-bbb3-cbe96d295bf0","excerpt":"TypeScript is a superset of JavaScript that extends JavaScript by adding types.\nIt supports es6+ features, contains static typing and other features.\nIt saves…","html":"<p><strong>TypeScript</strong> is a superset of JavaScript that extends JavaScript by adding types.\nIt supports es6+ features, contains static typing and other features.\nIt saves you time by catching the errors before you run the code.\nIt was released in 2012 by Microsoft.</p>\n<p>Typescript compiles down to JavaScript.\nInstall typescript compiler globally from npm.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g typescript</code></pre></div>\n<p>Create a .ts file and open it in your favourite code editoreg. <code class=\"language-text\">main.ts</code></p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">let</span> greetings <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Compile the typescript code down by opening the terminal then run</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">tsc <span class=\"token string\">\"your filename\"</span>\n//example\ntsc main.js</code></pre></div>\n<p>This creates a <code class=\"language-text\">.js</code> file in the same directory with the same name and writes the javascript code from our typescript file.</p>\n<p>You can use <code class=\"language-text\">-w</code> flag to watch the file during development so that you don’t have to recompile the code everytime you save your code</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">tsc main.js -w</code></pre></div>\n<p>Suppose you have multiple typescript file in thw <code class=\"language-text\">src</code> and you want to compile all the file to the <code class=\"language-text\">public</code> folder</p>\n<p>this creates a <code class=\"language-text\">ts-config</code> file</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">tsc --init</code></pre></div>\n<p>Edit the generated file according to your preffered configurations</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">target<span class=\"token operator\">:</span> <span class=\"token string\">\"es6\"</span><span class=\"token punctuation\">,</span>\nrootDir<span class=\"token operator\">:</span> <span class=\"token string\">\"./src\"</span><span class=\"token punctuation\">,</span>\noutDir<span class=\"token operator\">:</span> <span class=\"token string\">\"./public\"</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>Suppose You want to compile  files from the <code class=\"language-text\">src</code> to the <code class=\"language-text\">public</code>.Add the line at the end.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">,</span>\n<span class=\"token string\">\"include\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"src\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h3>Types in Typescript</h3>\n<p>Once you declare a variable type you cannot re-assign it with a different type eg sub a string with an integer.</p>\n<p>You can’t add additional properties to an object that wasn’t defined.You can re-assign an object but it should have the same structure as defined before.\nAn array only accepts the types of data defined with initially. ie you can’t push a number in an array of strings.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">let</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"Bwake\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//Explicit type</span>\n<span class=\"token class-name\"><span class=\"token keyword\">let</span></span> name2<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Davis\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> num <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> num2<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=</span> <span class=\"token number\">21</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> isHot <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> isCold<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//more than one possible type variable</span>\n<span class=\"token keyword\">let</span> id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token operator\">|</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//Arrays</span>\n<span class=\"token keyword\">let</span> names <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Davis\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Austine\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Williams\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> names2<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Davis\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Austine\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Williams\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//mixed arrays</span>\n<span class=\"token keyword\">let</span> mixed <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Reactjs\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2021</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">420</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> mixed2<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token operator\">|</span> <span class=\"token builtin\">number</span><span class=\"token operator\">|</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'hey'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">420</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//Objects</span>\n<span class=\"token keyword\">let</span> myObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    language<span class=\"token operator\">:</span> <span class=\"token string\">\"Swahili\"</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token operator\">:</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span>\n    likesCoffe<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> myObject2<span class=\"token operator\">:</span> object <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    language<span class=\"token operator\">:</span> <span class=\"token string\">\"English\"</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token operator\">:</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n    likesCoffe<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> myObject3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    language<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span>\n    likesCoffe<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span>\n<span class=\"token punctuation\">}</span>\nmyObject3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    language<span class=\"token operator\">:</span> <span class=\"token string\">\"English\"</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n    likesCoffe<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">any</code> type. A variable can be any type in future.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">let</span> age<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span> <span class=\"token operator\">=</span> <span class=\"token number\">21</span><span class=\"token punctuation\">;</span>\nage <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nage <span class=\"token operator\">=</span> <span class=\"token string\">\"Hi\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nage <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>fname<span class=\"token operator\">:</span> <span class=\"token string\">\"my FirstName\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> mixed<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nmixed<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmixed<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmixed<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mixed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> myObject<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token operator\">:</span>  <span class=\"token builtin\">any</span>\n<span class=\"token punctuation\">}</span>\n\nmyObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token string\">\"Davis\"</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">}</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>myObject<span class=\"token punctuation\">)</span></code></pre></div>\n<h3>Functions</h3>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">let</span> <span class=\"token function-variable function\">sayHi</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> sayhello<span class=\"token operator\">:</span> <span class=\"token builtin\">Function</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function-variable function\">sayhello</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> add <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> c<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token operator\">|</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> d<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token operator\">|</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> a<span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//c and d are optional parameters</span>\n\n<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Type Alias</h3>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">StringOrNumber</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">greet</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>uid<span class=\"token operator\">:</span> StringOrNumber<span class=\"token punctuation\">,</span> username<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>uid<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> - </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>username<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"davis\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"title":"Learn TypeScript","date":"January 03, 2021","description":"TypeScript is a superset of JavaScript that extends JavaScript by adding types. It saves you time by catching the errors before you run the code.It compiles down to JavaScript. Let's dive in and see how this JavaScript with types look like."}},"previous":{"fields":{"slug":"/data-structures-in-js/"},"frontmatter":{"title":"Data Structures and Algorithms in JavaScript"}},"next":{"fields":{"slug":"/webRTC/"},"frontmatter":{"title":"Understanding webRTC"}}},"pageContext":{"id":"22c6a742-5f1a-5c11-bbb3-cbe96d295bf0","previousPostId":"cdc0c3eb-2e4a-5497-99d3-9507ffd14a18","nextPostId":"93eb080f-5c62-513b-8c11-58ea7230464c"}},"staticQueryHashes":["2841359383","3257411868"]}