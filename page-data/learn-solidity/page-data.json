{"componentChunkName":"component---src-templates-blog-post-js","path":"/learn-solidity/","result":{"data":{"site":{"siteMetadata":{"title":"bwake blog"}},"markdownRemark":{"id":"1f9d1b5f-9173-566c-8147-64033e26a4f5","excerpt":"Solidity is a smart contract development language.\nIt is statically typed,supports inheritance, libraries etc. Solidity code is written in files with .sol…","html":"<p><strong>Solidity</strong> is a smart contract development language.\nIt is statically typed,supports inheritance, libraries etc.</p>\n<p>Solidity code is written in files with <strong>.sol</strong> extension. You can use remix browser editor here <a href=\"http://remix.ethereum.org\">Remix</a> .It allows you to compile and deploy your contracts on the go.</p>\n<p><strong>pragma</strong> declares the version of solidity compiler to use.</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token number\">0.5</span><span class=\"token number\">.3</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>contracts</strong> are the building blocks of smart contracts.\nlets write our first contract</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Variables in solidity</h3>\n<p><strong>state variables</strong>  are written in the blockchain.They’re permanently stored in contract storage.</p>\n<p><strong>local variables(memory)</strong> − are variables whose values are present till function is executing.\n<strong>Calldata</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//state variable</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> num1 <span class=\"token operator\">=</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">mynumber</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _num2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//local variable</span>\n        <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> num2 <span class=\"token operator\">=</span> _num2<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>Strings</h4>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> greetings <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>I’ts expensive to use the ethereum blockchain as a data storage hence using strings in your contracts is discouraged.\nYou can store large amount of data records on <strong>IPFS</strong>. It’s cheaper and public.</p>\n<h4>Functions</h4>\n<p>Function are categorized according to <strong>visibility</strong> i.e <em>public, private, internal and external</em> and <strong>behaviour</strong> i.e <em>payable</em>,<em>view</em> and <em>pure</em>.\nThere are functions that:</p>\n<ul>\n<li>\n<p><em>Create transactions on the blockchain</em>. They cost gas to call them.</p>\n<ul>\n<li>Statements that change the state of the blockchain:</li>\n<li>Writing to state variables.</li>\n<li>Emitting events</li>\n<li>Creating other contracts</li>\n<li>Using selfdestruct</li>\n<li>Sending Ether via calls</li>\n<li>Calling any function bot marked as <strong>view</strong> or <strong>pure</strong>.</li>\n<li>Using low-level calls</li>\n<li>Using inline assembly that contains certain opcodes</li>\n</ul>\n</li>\n<li>\n<p><em>Functions that don’t create transactions on the blockchain</em>.  This can be called for free.</p>\n<ul>\n<li><strong>View</strong> functions doesn’t change the state of the blockchain</li>\n<li><strong>Pure</strong> functions does not change state nor read state variables in the blockchain.</li>\n<li>\n<p>Statement considered reading from the state.</p>\n<ul>\n<li>Reading from state variables.</li>\n<li>Accessing <em>address(this).balance</em> or <em>&#x3C; address >.balance</em>.</li>\n<li>Accessing any member of <em>block, tx, msg</em> except <em>msg.sig and msg.data</em></li>\n<li>Calling any function not marked pure.</li>\n<li>Using inline assembly that contains certain opcodes</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span> <span class=\"token punctuation\">{</span>\n         \n  <span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> x <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">function</span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n      name <span class=\"token operator\">=</span> _name<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">//View Functions</span>\n  \n  <span class=\"token keyword\">function</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> add <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">//Pure Functions</span>\n  <span class=\"token keyword\">function</span> addNum <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> x<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">returns</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>solidity functions can return multiple values</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\">    <span class=\"token keyword\">function</span> <span class=\"token function\">returnMultipleValuesA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">returnMultipleValuesB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">//Destructing Assignments</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">destructuredAssignments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> a<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span> b<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> c<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">returnMultipleValuesA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//lEaving values cout</span>\n    <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> x<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<p>In <strong>public functions</strong> you cannot input:</p>\n<ul>\n<li>maps</li>\n<li>multi-dimensional arrays(unfixed size).</li>\n</ul>\n<h4>Function Modifiers</h4>\n<p>Functions modifiers are reusable code that can be attached to a function either before or after the function is executed.\nThey can be used to restrict write access, validate input and prevent reentrancy hack</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> owner<span class=\"token punctuation\">;</span>\n \n <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n     owner <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n \n <span class=\"token keyword\">modifier</span> <span class=\"token function\">onlyOwner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> owner<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Not Owner\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n \n<span class=\"token keyword\">modifier</span> <span class=\"token function\">validAddress</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _addr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_addr <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Not valid address\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n \n <span class=\"token keyword\">function</span> <span class=\"token function\">changeOwner</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _newOwner<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyOwner <span class=\"token function\">validAddress</span><span class=\"token punctuation\">(</span>_newOwner<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     \n     owner <span class=\"token operator\">=</span> _newOwner<span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n\n <span class=\"token comment\">//No reentrency</span>\n <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> x <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n <span class=\"token builtin\">bool</span> locked<span class=\"token punctuation\">;</span>\n \n <span class=\"token keyword\">modifier</span> <span class=\"token function\">noReentrancy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>locked<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Locked\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     \n     locked <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n     locked <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n \n <span class=\"token keyword\">function</span> <span class=\"token function\">decrement</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> i<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> noReentrancy <span class=\"token punctuation\">{</span>\n     x <span class=\"token operator\">-=</span> i<span class=\"token punctuation\">;</span>\n     \n     <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n         <span class=\"token function\">decrement</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span>\n    \n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Inheritance</h3>\n<p>You can inherit contracts in solidity.</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n    \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld2</span> <span class=\"token keyword\">is</span> HelloWorld<span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>You can override a function from the parrent function.</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n    \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld2</span> <span class=\"token keyword\">is</span> HelloWorld<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>When you deploy contract <code class=\"language-text\">Helloworld2</code> you’ll see it has the <code class=\"language-text\">greet()</code> method</p>\n<p>You can inherit constructor paramaters</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n<span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> origin<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _origin<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    origin <span class=\"token operator\">=</span> _origin<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld2</span> <span class=\"token keyword\">is</span> HelloWorld <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _origin<span class=\"token punctuation\">)</span> <span class=\"token function\">HelloWorld</span><span class=\"token punctuation\">(</span>_origin<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n      \n  <span class=\"token punctuation\">}</span>  \n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>You can inherit from multiple contracts</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">hi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"Hi\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld2</span> <span class=\"token keyword\">is</span> HelloWorld <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">habari</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"Habari\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld3</span> <span class=\"token keyword\">is</span> HelloWorld<span class=\"token punctuation\">,</span>HelloWorld2 <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Contracts are inherited from the most base like to the most derived.\nYou can call contracts <code class=\"language-text\">explicitly</code> or using <code class=\"language-text\">super</code> to get the parent method.</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">event</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">hi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">emit</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A greetings function was called from contract 1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">habari</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">emit</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"habari yako kutoka kwa kandarasi ya  ya pili\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld2</span> <span class=\"token keyword\">is</span> HelloWorld <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">hi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A greetings function was called from contract 2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        HelloWorld<span class=\"token punctuation\">.</span><span class=\"token function\">hi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        super<span class=\"token punctuation\">.</span><span class=\"token function\">habari</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld3</span> <span class=\"token keyword\">is</span> HelloWorld<span class=\"token punctuation\">,</span>HelloWorld2 <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">hi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A greetings function was called from contract 3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        HelloWorld<span class=\"token punctuation\">.</span><span class=\"token function\">hi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld4</span> <span class=\"token keyword\">is</span> HelloWorld<span class=\"token punctuation\">,</span>HelloWorld2<span class=\"token punctuation\">,</span> HelloWorld3 <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>You can inherit and call the contructor function in three ways:</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n<span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> name<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    name <span class=\"token operator\">=</span> _name<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Greeting</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> text<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _text<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        text <span class=\"token operator\">=</span> _text<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld2</span> <span class=\"token keyword\">is</span> <span class=\"token function\">HelloWorld</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A fixed name input\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Greeting</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Another fixed text Input\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld3</span> <span class=\"token keyword\">is</span> HelloWorld<span class=\"token punctuation\">,</span> Greeting <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token function\">HelloWorld</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hard code new input\"</span><span class=\"token punctuation\">)</span> <span class=\"token function\">Greeting</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hard code new greeting\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld4</span> <span class=\"token keyword\">is</span> HelloWorld<span class=\"token punctuation\">,</span> Greeting <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _name<span class=\"token punctuation\">)</span> <span class=\"token function\">HelloWorld</span><span class=\"token punctuation\">(</span>_name<span class=\"token punctuation\">)</span> <span class=\"token function\">Greeting</span><span class=\"token punctuation\">(</span>_name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The order in which the contracts are called is determined by the inheritance.</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">event</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> name<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    name <span class=\"token operator\">=</span> _name<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">emit</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span>_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Greeting</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">event</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> text<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _text<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        text <span class=\"token operator\">=</span> _text<span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span>_text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld3</span> <span class=\"token keyword\">is</span> HelloWorld<span class=\"token punctuation\">,</span> Greeting <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token function\">HelloWorld</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HelloWorld contract called\"</span><span class=\"token punctuation\">)</span> <span class=\"token function\">Greeting</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Greetings contract called\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld5</span> <span class=\"token keyword\">is</span> HelloWorld<span class=\"token punctuation\">,</span> Greeting <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token function\">Greeting</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Greetings contract called\"</span><span class=\"token punctuation\">)</span> <span class=\"token function\">HelloWorld</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HelloWorld contract called\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>You can override an inherited state variable in a contructor and not by re-assigning it outside the constructor.</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"Davis\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Greeting</span> <span class=\"token keyword\">is</span> HelloWorld <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        name <span class=\"token operator\">=</span> <span class=\"token string\">\"Bwake\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Private</strong> state variables and functions are only accessible to the contract that defines it.\n<strong>Internal</strong> state variables and functions are  accessible to the contract that defines it and the child contract.\n<strong>External</strong> state variables and functions are  accessible to the other contracts and accounts.\n<strong>External</strong> state variables and functions are  accessible to any contracts and accounts.</p>\n<h3>Events</h3>\n<p>contracts can tell us that something has happened in the blockchain by firing events.\nApplications can be notified when this events are fired.\nEvents accept 3 paramaters.\nWe can get access to the past events and subcribe to new ones.</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token comment\">//indexed allows you to search for events where the parameter equals to a certain value</span>\n<span class=\"token keyword\">event</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">event</span> <span class=\"token function\">AnotherLog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">fireEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">emit</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">emit</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello Again\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">emit</span> <span class=\"token function\">AnotherLog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Interacting with past events from Dai stable coin</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Web3 <span class=\"token operator\">=</span>  <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"web3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//DAI stablecoin ABI</span>\n<span class=\"token keyword\">const</span> abi <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./abi.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">INFURA_URL</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Infura URL\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> web3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Web3</span><span class=\"token punctuation\">(</span><span class=\"token constant\">INFURA_URL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//Address of Dai Stablecoin</span>\n<span class=\"token keyword\">const</span> address <span class=\"token operator\">=</span> <span class=\"token string\">\"0x89d24A6b4...\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">const</span> latest <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span><span class=\"token function\">getBlockNumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Latest block is\"</span><span class=\"token punctuation\">,</span> latest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> contract <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>Contract</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> logs <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> contract<span class=\"token punctuation\">.</span><span class=\"token function\">getPastEvents</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Transfer\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>fromBlock<span class=\"token operator\">:</span> latest <span class=\"token operator\">-</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\ntoBlock<span class=\"token operator\">:</span> latest\n<span class=\"token comment\">//filter by sender</span>\n<span class=\"token comment\">//filter: {src: \"0x526a..\"},</span>\n<span class=\"token comment\">//filter by receiver</span>\n<span class=\"token comment\">///filter: {dst: \"0x397553...\"}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Logs\"</span><span class=\"token punctuation\">,</span> logs<span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>logs<span class=\"token punctuation\">.</span>length logs<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Subscribe to new events.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Web3 <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"web3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//Dai StableCoin ABI</span>\n<span class=\"token keyword\">const</span> abi <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./abi.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">INFURA_URL</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"infura url\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> web3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Web3</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Web3<span class=\"token punctuation\">.</span>providers<span class=\"token punctuation\">.</span>WebsocketProvider</span><span class=\"token punctuation\">(</span><span class=\"token constant\">INFURA_URL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//Adddress for Dai stablecoin</span>\n<span class=\"token keyword\">const</span> address <span class=\"token operator\">=</span> <span class=\"token string\">\"0x89d24...\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> contract <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>Contract</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Subscribe to transfer event\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    contract<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">.</span><span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//filter by sender</span>\n        filter<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>src<span class=\"token operator\">:</span> <span class=\"token string\">\"0x397553...\"</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> log</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"log\"</span><span class=\"token punctuation\">,</span> log<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Error handling</h3>\n<h4>Assert</h4>\n<p>Should never evaluate to false.\nUses up all the gas.</p>\n<h4>Require</h4>\n<p>Used in validating input,preconditions and outputs.\nDoesn’t use up all the gas.</p>\n<h4>Revert</h4>\n<p>Used when checking more complex conditions.\ntakes in one argument</p>\n<h3>Loops</h3>\n<p>Doing <code class=\"language-text\">for</code> loops in JavaScript.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">pragma solidity <span class=\"token operator\">^</span><span class=\"token number\">0.5</span><span class=\"token number\">.3</span><span class=\"token punctuation\">;</span>\n\ncontract HelloWorld<span class=\"token punctuation\">{</span>\n\nuint <span class=\"token keyword\">public</span> count<span class=\"token punctuation\">;</span>\naddress<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> shareholders<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">uint n</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>uint i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">dividendPay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>uint i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> shareholders<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//send Ether to each shareholder</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Arrays</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">pragma solidity <span class=\"token operator\">^</span><span class=\"token number\">0.5</span><span class=\"token number\">.3</span><span class=\"token punctuation\">;</span>\n\ncontract HelloWorld<span class=\"token punctuation\">{</span>\n\nuint<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> myArray<span class=\"token punctuation\">;</span>\nuint<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> myArray2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nuint<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> newFixedArray<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">uint i</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    myArray<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">uint i</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    myArray<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getLength</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> view <span class=\"token function\">returns</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> myArray<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">uint index</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    \n    <span class=\"token comment\">// delete myArray[index];</span>\n    myArray<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> myArray<span class=\"token punctuation\">[</span>myArray<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    \n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Mappings</h3>\n<p>Are like maps in JavaScript.\nAre good for easy and faster access of data.\nYou cannot iterate or get the size of a mapping.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">pragma solidity <span class=\"token operator\">^</span><span class=\"token number\">0.5</span><span class=\"token number\">.3</span><span class=\"token punctuation\">;</span>\n\ncontract HelloWorld<span class=\"token punctuation\">{</span>\n\n<span class=\"token function\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">address</span> <span class=\"token operator\">=></span> uint<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> myMap<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">address _addr</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> view <span class=\"token function\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> myMap<span class=\"token punctuation\">[</span>_addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">address _addr<span class=\"token punctuation\">,</span> uint _i</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    myMap<span class=\"token punctuation\">[</span>_addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> _i<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">address _addr</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">delete</span> myMap<span class=\"token punctuation\">[</span>_addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Merkle Tree</h3>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">verifyMerkleProof</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes32</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> proof<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes32</span> root<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes32</span> leaf<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> index<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">bytes32</span> hash <span class=\"token operator\">=</span> leaf<span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">//recompute merkle root</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> proof<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                hash <span class=\"token operator\">=</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodePacked</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">,</span> proof<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                hash <span class=\"token operator\">=</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodePacked</span><span class=\"token punctuation\">(</span>proof<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            \n            index <span class=\"token operator\">=</span> index <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n        <span class=\"token keyword\">return</span> hash <span class=\"token operator\">==</span> root<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Enum</h3>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Order</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">enum</span> <span class=\"token class-name\">Status</span> <span class=\"token punctuation\">{</span>\n        Pending<span class=\"token punctuation\">,</span>\n        Shipped<span class=\"token punctuation\">,</span> \n        Accepted<span class=\"token punctuation\">,</span>\n        Rejected<span class=\"token punctuation\">,</span>\n        Cancelled\n    <span class=\"token punctuation\">}</span>\n    \n    Status <span class=\"token keyword\">public</span> status<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">ship</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>status <span class=\"token operator\">==</span> Status<span class=\"token punctuation\">.</span>Pending<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        status <span class=\"token operator\">=</span> Status<span class=\"token punctuation\">.</span>Shipped<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">acceptDelivery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>status <span class=\"token operator\">==</span> Status<span class=\"token punctuation\">.</span>Shipped<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        status <span class=\"token operator\">=</span> Status<span class=\"token punctuation\">.</span>Accepted<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">rejectDelivery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>status <span class=\"token operator\">==</span> Status<span class=\"token punctuation\">.</span>Shipped<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        status <span class=\"token operator\">=</span> Status<span class=\"token punctuation\">.</span>Rejected<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>status <span class=\"token operator\">==</span> Status<span class=\"token punctuation\">.</span>Pending<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        status <span class=\"token operator\">=</span> Status<span class=\"token punctuation\">.</span>Cancelled<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Structs</h3>\n<p>Are user defined data types in solidity</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Todos</span> <span class=\"token punctuation\">{</span>\n    \n    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">Todo</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">string</span> text<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">bool</span> completed<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    Todo<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> todos<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _text<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        todos<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">Todo</span><span class=\"token punctuation\">(</span>_text<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> _index<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        Todo <span class=\"token keyword\">storage</span> todo <span class=\"token operator\">=</span> todos<span class=\"token punctuation\">[</span>_index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>todo<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> todo<span class=\"token punctuation\">.</span>completed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    \n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Payable functions and address</h3>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Wallet</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//payable function &amp; address</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Deposit</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Withdraw</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> <span class=\"token keyword\">public</span> owner<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        owner <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Deposit</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">notPayable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        \n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">modifier</span> <span class=\"token function\">onlyOwner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> owner<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Not owner\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> _amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyOwner <span class=\"token punctuation\">{</span>\n        owner<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>_amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Withdraw</span><span class=\"token punctuation\">(</span>_amount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> _amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyOwner <span class=\"token punctuation\">{</span>\n        _to<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>_amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span>_to<span class=\"token punctuation\">,</span> _amount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Deployment</h3>\n<p><em>Ether</em> is used to pay block rewards, pay transaction fee and can be transferred betwwen accounts.\n<em>Wei</em> one ether equals to 10 ^ 18 wei.</p>\n<p><em>Gas</em> - total amount of computation used to proecess each transaction on the blockchain is measured in gas.\nThe purpose of gas is to limit the amount of computations that a transction can do. eg. an eternal loop.</p>\n<p><em>Gas limit</em> is the maximum amount of gas you’re willing to use.Set by you.\n<em>Block gas limit</em> is the maximum amount alowed in the blockchain set by the network.</p>\n<p><em>Gas price</em> - Is the amount of ether you’re willing for one gas.</p>\n<p><em>Ether = Gas limit * Gas Price</em></p>\n<p>When your transaction runs out of gas it’s aborted but you still pay for the gas already used.</p>","frontmatter":{"title":"Learn Solidity - Smart Contract Oriented Language","date":"November 03, 2020","description":"Solidity is an object-oriented, high-level language for implementing smart contracts. It's designed to target the Ethereum Virtual Macine to implement Smart Contracts. It's influenced by C++, Python and JavaScript. So it will be easy to pick if you're familiar with any of the languages."}},"previous":{"fields":{"slug":"/react-js/"},"frontmatter":{"title":"A walk through reactjs"}},"next":{"fields":{"slug":"/asyncjs/"},"frontmatter":{"title":"Asynchronous JavaScript"}}},"pageContext":{"id":"1f9d1b5f-9173-566c-8147-64033e26a4f5","previousPostId":"e96a1c6d-94aa-5664-91dc-8666a285af56","nextPostId":"5b1b665e-546d-574b-a286-c20f67f4c281"}},"staticQueryHashes":["2841359383","3257411868"]}